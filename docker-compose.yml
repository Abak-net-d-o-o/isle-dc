version: '3.7'

## ISLE 8 Draft Prototype
## Feb, 2020
## MVP 1 - Traefik, Solr, MySQL & Drupal (using Woodby images for Apache, Drupal and Solr)
## MVP 2 - Microservices & Connectors (Houdini, Homarus, Hypercube, FITS, ActiveMQ and Cantaloupe)

services:

  apache:
    image: wodby/apache:$APACHE_TAG
    container_name: "${PROJECT_NAME}_apache"
    networks:
      - internal
    depends_on:
      - php
    environment:
      APACHE_LOG_LEVEL: debug
      APACHE_BACKEND_HOST: php
      APACHE_VHOST_PRESET: php
      APACHE_DOCUMENT_ROOT: /var/www/html/web
    volumes:
      - ./codebase:/var/www/html
      - ./jwt:/opt/jwt
## For macOS users (https://wodby.com/docs/stacks/drupal/local#docker-for-mac)
##      - ./codebase:/var/www/html:cached # User-guided caching
##      - docker-sync:/var/www/html # Docker-sync
    labels:
      - "traefik.http.routers.${PROJECT_NAME}_apache.rule=Host(`${PROJECT_BASE_URL}`)"


  mariadb:
    ## Using for protoype database
    image: wodby/mariadb:$MARIADB_TAG
    container_name: "${PROJECT_NAME}_mariadb"
    networks:
      - internal   
    stop_grace_period: 30s
    environment:
      MYSQL_ROOT_PASSWORD: $DB_ROOT_PASSWORD
      MYSQL_DATABASE: $DB_NAME
      MYSQL_USER: $DB_USER
      MYSQL_PASSWORD: $DB_PASSWORD
      FCREPO_DB: fcrepo_db
    volumes:
    ## TO DO: How to allow for slow query log setup?
    ## TO DO: Customization: Allow for additional tuning of MySQL.
      - mariadb-data:/var/lib/mysql
      #- ./mariadb-init:/docker-entrypoint-initdb.d # Place init .sql file(s) here. if needed e.g. fedora.
      - ./scripts/fcrepo/sqlfiles:/docker-entrypoint-initdb.d
      #command: bash -c "mysql -u root -p$MYSQL_ROOT_PASSWORD < /docker-entrypoint-initdb.d/fcrepo-db.sql"


  php:
    image: wodby/drupal-php:$PHP_TAG
    container_name: "${PROJECT_NAME}_php"
    networks:
      - internal
    env_file:
      - php.env
    environment:
      # PHP_SENDMAIL_PATH: /usr/sbin/sendmail -t -i -S mailhog:1025
      # PHP_SENDMAIL_PATH: /usr/sbin/sendmail -t -i -S opensmtpd:25      
      DB_HOST: $DB_HOST
      DB_PORT: $DB_PORT
      DB_USER: $DB_USER
      DB_PASSWORD: $DB_PASSWORD
      DB_NAME: $DB_NAME
      DB_DRIVER: $DB_DRIVER
      PHP_FPM_USER: wodby
      PHP_FPM_GROUP: wodby
      COLUMNS: 80 # Set 80 columns for docker exec -it.
## Read instructions at https://wodby.com/docs/stacks/php/local/#xdebug
#      PHP_XDEBUG: 1
#      PHP_XDEBUG_DEFAULT_ENABLE: 1
#      PHP_XDEBUG_REMOTE_CONNECT_BACK: 0
#      PHP_IDE_CONFIG: serverName=my-ide
#      PHP_XDEBUG_IDEKEY: "my-ide"
#      PHP_XDEBUG_REMOTE_HOST: host.docker.internal # Docker 18.03+ Mac/Win
#      PHP_XDEBUG_REMOTE_HOST: 172.17.0.1 # Linux
#      PHP_XDEBUG_REMOTE_HOST: 10.254.254.254 # macOS, Docker < 18.03
#      PHP_XDEBUG_REMOTE_HOST: 10.0.75.1 # Windows, Docker < 18.03
#      PHP_XDEBUG_REMOTE_LOG: /tmp/php-xdebug.log
    volumes:
      - ./scripts:/scripts
      - ./codebase:/var/www/html
      - ./config/drupal:/opt/drupal_config
      - ./jwt:/opt/jwt
## For macOS users (https://wodby.com/docs/stacks/drupal/local#docker-for-mac)
#      - ./codebase:/var/www/html:cached # User-guided caching
#      - docker-sync:/var/www/html # Docker-sync
## For XHProf and Xdebug profiler traces
#      - files:/mnt/files


  solr:
    image: wodby/solr:$SOLR_TAG
    container_name: "${PROJECT_NAME}_solr"
    networks:
      - internal
    environment:
      SOLR_DEFAULT_CONFIG_SET: $SOLR_CONFIG_SET
      SOLR_HEAP: 1024m
    volumes:
      - solr-data:/opt/solr/server/solr
    # TO DO: Determine what type of container handling is needed, exposed ports etc?
    labels:
      - "traefik.http.routers.${PROJECT_NAME}_solr.rule=Host(`solr.${PROJECT_BASE_URL}`)"    


  cantaloupe:
    image: lyrasis/cantaloupe:latest # should this be 4.0-1 instead?
    container_name: "${PROJECT_NAME}_cantaloupe"
    networks:
      - internal
    env_file:
      - cantaloupe.env
    ports:
      - "8182:8182"
    # TO DO: Determine what type of container handling is needed, exposed ports etc?
    #volumes:
    # (optional) bind-mount this file as a template for changes to the cantaloupe container. Currently the cantaloupe.env handles this.
    #  - ./config/cantaloupe/cantaloupe.properties:/cantaloupe/cantaloupe.properties
    #labels:
    #  - "traefik.http.routers.${PROJECT_NAME}_cantaloupe.rule=Host(`cantaloupe.${PROJECT_BASE_URL}`)"

### MVP2 - Microservices - Start

  houdini:
    image: borndigital/isle-houdini:mvp2-alpha
#    build:
#      context: https://github.com/Islandora-Devops/isle-houdini.git#dev
#      args:
#        HOUDINI_JWT_ADMIN_TOKEN: $HOUDINI_JWT_ADMIN_TOKEN
#        HOUDINI_LOG_LEVEL: $HOUDINI_LOG_LEVEL
    container_name: "${PROJECT_NAME}_houdini"
    networks:
      - internal
#    ports:
#      - "8000:8000"
    volumes:
      - ./jwt:/opt/jwt
      - ./config/crayfish/php.ini:/usr/local/etc/php/php.ini
    #labels:
    #  - "traefik.http.routers.${PROJECT_NAME}_houdini.rule=Host(`houdini.${PROJECT_BASE_URL}`)" 


  homarus:
    image: borndigital/isle-homarus:mvp2-alpha
#    build:
#      context: https://github.com/Islandora-Devops/isle-homarus.git#dev
#      args:
#        HOMARUS_JWT_ADMIN_TOKEN: $HOMARUS_JWT_ADMIN_TOKEN
#        HOMARUS_LOG_LEVEL: $HOMARUS_LOG_LEVEL
    container_name: "${PROJECT_NAME}_homarus"
#    ports:
#      - "8001:8000"
    volumes:
      - ./jwt:/opt/jwt
      - ./config/crayfish/php.ini:/usr/local/etc/php/php.ini
    #labels:
    #  - "traefik.http.routers.${PROJECT_NAME}_homarus.rule=Host(`homarus.${PROJECT_BASE_URL}`)"     


  hypercube:
    image: borndigital/isle-hypercube:mvp2-alpha
#    build:
#      context: https://github.com/Islandora-Devops/isle-hypercube.git#dev
#      args:
#        HYPERCUBE_JWT_ADMIN_TOKEN: $HYPERCUBE_JWT_ADMIN_TOKEN
#        HYPERCUBE_LOG_LEVEL: $HYPERCUBE_LOG_LEVEL
    container_name: "${PROJECT_NAME}_hypercube"
    networks:
      - internal
#    ports:
#      - "8002:8000"
    volumes:
      - ./jwt:/opt/jwt
      - ./config/crayfish/php.ini:/usr/local/etc/php/php.ini
    #labels:
    #  - "traefik.http.routers.${PROJECT_NAME}_hypercube.rule=Host(`hypercube.${PROJECT_BASE_URL}`)"    

  crayfits:
    image: borndigital/isle-crayfits:mvp2-alpha
#    build:
#      context: https://github.com/Islandora-Devops/isle-crayfits.git#dev
#      args:
#        FITS_WEBSERVICE_URI: http://fits:8080/fits/examine
    container_name: "${PROJECT_NAME}_crayfits"
    networks:
      - internal
#    ports:
#      - "8003:8000"
    volumes:
      - ./config/crayfish/php.ini:/usr/local/etc/php/php.ini
    #labels:
    #  - "traefik.http.routers.${PROJECT_NAME}_hypercube.rule=Host(`hypercube.${PROJECT_BASE_URL}`)"    

  fits:
    image: harvardlts/fitsservlet_container:1.5.0
    container_name: "${PROJECT_NAME}_fits"
    networks:
      - internal
#    ports:
#      - '8085:8080'
    # TO DO: Determine what type of container handling is needed, exposed ports etc?
    #volumes:
    #labels:
    #  - "traefik.http.routers.${PROJECT_NAME}_fits.rule=Host(`fits.${PROJECT_BASE_URL}`)"

### MVP2 - Microservices - End


  traefik:
    # review https://hub.docker.com/_/traefik
    image: traefik:2.1.3
    container_name: "${PROJECT_NAME}_traefik"
    command: --api.insecure=true --providers.docker
    networks:
      internal:
      external:
    ports:
      - '80:80'
      #- "443:443"
      #- "8080:8080"
    volumes:
      # TO DO: Update according to new Traefik 2.0 conventions (values below based on 1.7.9, are incomplete & wrong due to missing "routing" labels)
      - /var/run/docker.sock:/var/run/docker.sock
      # SSL Choice 1: To use Let's Encrypt for SSL- uncomment ONLY the line below and then create an empty config/traefik/acme.json file
      # - ./config/traefik/acme.json:/acme.json
      # SSL Choice 2: To use commercial SSLs - uncomment ONLY the line below. Add your SSL certs (.cert, .pem, .key) files to config/traefik/ssl-certs
      # - ./config/traefik/ssl-certs:/certs:ro

      # Use Environment vaiables to pass in Traefik config; no traefik.yml required
      # by providers
      # Alternative to a static configureation /etc/traefik/traefik.yml"
      # Pass in config via flags or environment variables
      # https://docs.traefik.io/getting-started/configuration-overview
      # Obsolete - "./config/traefik/traefik.local.yml:/etc/traefik/traefik.yml"

  alpaca-connector:
    container_name: "${PROJECT_NAME}_alpaca"
    image: birkland/isle-alpaca@sha256:9fdf260df79b38fd240192ec618e4eec74cca2b6157b4e59f7d4792295cfe210
    env_file: .env
    networks:
      - internal

  activemq:
    image: rmohr/activemq
    container_name: "${PROJECT_NAME}_activemq"
    env_file: .env
    ports:
      - "8161:8161"    # To make mgmt console available for dev purposes.  use admin:admin to log in
    networks:
      - internal
    volumes:
      - activemq-data:/opt/activemq/data

### MVP3

  fcrepo:
    image: borndigital/isle-fcrepo:mvp3-alpha
#    build:
#      context: https://github.com/Islandora-Devops/isle-fcrepo.git#mvp3-dev
#      args:
#        ARG FCREPO_VERSION: ${FCREPO_VERSION:-5.1.0}
#        ARG FCREPO_CONFIG_DIR: /opt/fcrepo/config
#        ARG FCREPO_HOME: /opt/fcrepo/data
    env_file: fcrepo.env
    environment:
      - JAVA_MAX_MEM=4096M
      - JAVA_MIN_MEM=1024M
    container_name: "${PROJECT_NAME}_fcrepo"
    networks:
      - internal
    ports:
      - "8006:8080"
    volumes:
      - ./data/fcrepo/data:/opt/fcrepo/data
      - ./syn-keys:/opt/keys
      - ./config/fcrepo/tomcat-users.xml:/usr/local/tomcat/conf/tomcat-users.xml
    #labels:
    #  - "traefik.http.routers.${PROJECT_NAME}_fcrepo.rule=Host(`fcrepo.${PROJECT_BASE_URL}`)"   


  blazegraph:
    #image: lyrasis/blazegraph:2.1.5
    image: borndigital/lyrasis-blazegraph:mvp3-alpha
    environment:
      - JAVA_MAX_MEM=4096M
      - JAVA_MIN_MEM=1024M
    container_name: "${PROJECT_NAME}_blazegraph"
    networks:
      - internal
    ports:
      - "8007:8080"
    volumes:
      # persist the bigdata.jnl file which can be large
      - ./config/blazegraph/RWStore.properties:/RWStore.properties
      - ./config/blazegraph/inference.nt:/inference.nt
      # Local volume for avoiding permissions issues
      - blazegraph-data:/var/lib/jetty/data
      - ./scripts/blazegraph:/scripts
    #labels:
    #  - "traefik.http.routers.${PROJECT_NAME}_blazegraph.rule=Host(`blazegraph.${PROJECT_BASE_URL}`)"


  gemini:
    image: borndigital/isle-gemini:mvp3-alpha
#    build:
#      context: https://github.com/Islandora-Devops/isle-gemini.git#dev
#      args:
#        GEMINI_JWT_ADMIN_TOKEN: $GEMINI_JWT_ADMIN_TOKEN
#        GEMINI_LOG_LEVEL: $GEMINI_LOG_LEVEL
    container_name: "${PROJECT_NAME}_gemini"
    networks:
      - internal
#    ports:
#      - "8008:8000"
    volumes:
      - ./jwt:/opt/jwt
      - ./config/crayfish/php.ini:/usr/local/etc/php/php.ini
    #labels:
    #  - "traefik.http.routers.${PROJECT_NAME}_gemini.rule=Host(`gemini.${PROJECT_BASE_URL}`)"  


  milliner:
    image: borndigital/isle-milliner:mvp3-alpha
#    build:
#      context: https://github.com/Islandora-Devops/isle-milliner.git#dev
#      args:
#        MILLINER_JWT_ADMIN_TOKEN: $MILLINER_JWT_ADMIN_TOKEN
#        MILLINER_LOG_LEVEL: $MILLINER_LOG_LEVEL
    container_name: "${PROJECT_NAME}_milliner"
    networks:
      - internal
#    ports:
#      - "8009:8000"
    volumes:
      - ./jwt:/opt/jwt
      - ./config/crayfish/php.ini:/usr/local/etc/php/php.ini
    #labels:
    #  - "traefik.http.routers.${PROJECT_NAME}_milliner.rule=Host(`milliner.${PROJECT_BASE_URL}`)"  


  recast:
    image: borndigital/isle-recast:mvp3-alpha
#    build:
#      context: https://github.com/Islandora-Devops/isle-recast.git#dev
#      args:
#        RECAST_JWT_ADMIN_TOKEN: $RECAST_JWT_ADMIN_TOKEN
#        RECAST_LOG_LEVEL: $RECAST_LOG_LEVEL
    container_name: "${PROJECT_NAME}_recast"
    networks:
      - internal
#    ports:
#      - "8009:8000"
    volumes:
      - ./jwt:/opt/jwt
      - ./config/crayfish/php.ini:/usr/local/etc/php/php.ini
    #labels:
    #  - "traefik.http.routers.${PROJECT_NAME}_recast.rule=Host(`recast.${PROJECT_BASE_URL}`)" 

### MVP3


networks:
  internal:
  external:

volumes:
  mariadb-data:
  solr-data:
  activemq-data:
  blazegraph-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/data/blazegraph/data

  # isle-dc-postgres-data # Added to prototype but not currently used    
