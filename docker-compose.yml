# file: docker-compose.yml
# DO NOT USE IN PRODUCTION
#
# Development docker-compose for testing locally:
# - All users are 'admin'
# - All passwords are 'password'
# 
# With the exception of the database where the user is 
# 'root' rather than admin. And the database users for 
# each service are named after their respective service 
# to avoid conflict.
#
# The Traefik image acts as Reverse Proxy to the services,
# assuming you can map to port 80 on your machine. The 
# loop back for localhost should make the following urls 
# accessible in your browser:
#
# - activemq.localhost/admin
# - blazegraph.localhost/bigdata
# - drupal.localhost
# - fcrepo.localhost/fcrepo/reset
# - matomo.localhost
#
# For other images you can use the command:
#
# ./commands/open-in-browser SERVICE
version: "3.7"
networks:
  external:
    internal: false
  default:
    internal: true
volumes:
  activemq-data:
  blazegraph-data:
  drupal-config-data:
  drupal-sites-data:
  cantaloupe-data:
  etcd-data:
  fcrepo-data:
  jwt-data:
  jwt-public-data:
  karaf-data:
  matomo-config-data:
  mysql-data:
  mysql-files:
  solr-data:
services:
  # Single node cluster.
  # 
  #  If disabled the system will fall back on Environment Variables.
  #  To set key/value pairs use the following:
  #
  #  ./commands/etcdctl.sh put /drupal/site/default/name "default"
  #
  etcd:
    image: gcr.io/etcd-development/etcd:v3.4.7
    environment:
      ETCD_ADVERTISE_CLIENT_URLS: "http://0.0.0.0:2379"
      ETCD_LISTEN_CLIENT_URLS: "http://0.0.0.0:2379"
    volumes:
      - etcd-data:/data
    ports:
      - 2379
      - 2380
      - 4001
    command: >
      etcd
      --data-dir=/data
  watchtower:
    image: v2tec/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 1 --no-pull
  activemq:
    image:  ${REPOSITORY:-islandora}/activemq:latest
    volumes:
      - activemq-data:/opt/activemq/data
    labels:
      # Do not expose in production.
      - traefik.http.services.activemq.loadbalancer.server.port=8161
      - traefik.http.routers.activemq_http.service=activemq
      - traefik.http.routers.activemq_http.entrypoints=http
  alpaca:
    image:  ${REPOSITORY:-islandora}/alpaca:latest
    volumes:
      - karaf-data:/opt/karaf/data
    depends_on:
      - activemq
  blazegraph:
    image:  ${REPOSITORY:-islandora}/blazegraph:latest
    volumes:
      - blazegraph-data:/data
    networks:
      default:
        aliases:
          - blazegraph.localhost
    labels:
      - traefik.http.services.blazegraph.loadbalancer.server.port=80
      - traefik.http.routers.blazegraph_http.service=blazegraph
      - traefik.http.routers.blazegraph_http.entrypoints=http
  cantaloupe:
    image:  ${REPOSITORY:-islandora}/cantaloupe:latest
    volumes:
      - cantaloupe-data:/data
    networks:
      default:
        aliases:
          - cantaloupe.localhost
    labels:
      - traefik.http.services.cantaloupe.loadbalancer.server.port=80
      - traefik.http.routers.cantaloupe_http.service=cantaloupe
      - traefik.http.routers.cantaloupe_http.entrypoints=http
  crayfits:
    image:  ${REPOSITORY:-islandora}/crayfits:latest
    depends_on:
      - fits
  # Database is chosen as the service name rather than mariadb,
  # as institutions may want to swap out back-ends later and
  # database is a more sensible default.
  database:
    image:  ${REPOSITORY:-islandora}/mariadb:latest
    volumes:
      - mysql-data:/var/lib/mysql
      - mysql-files:/var/lib/mysql-files
  #drupal:
  #  image:  ${REPOSITORY:-islandora}/sandbox:latest
  #  restart: unless-stopped
  #  volumes:
  #    - drupal-config-data:/var/www/drupal/config
  #    - drupal-sites-data:/var/www/drupal/web/sites
  #    - solr-data:/opt/solr/server/solr
  #    - jwt-data:/opt/keys/claw/
  #  depends_on:
  #    - solr
  #    - fcrepo
  #    - database
  #    - activemq
  #  networks:
  #    default:
  #      aliases:
  #        - drupal.localhost
  #  labels:
  #    - traefik.http.services.drupal.loadbalancer.server.port=80
  #    - traefik.http.routers.drupal_http.service=drupal
  #    - traefik.http.routers.drupal_http.entrypoints=http
      
  drupal:
    build:
      context: ./
      dockerfile: ${PROJECT_DRUPAL_DOCKERFILE:-./drupal.Dockerfile}
      target: dev
      args:
        - code_dir=./codebase
        - base_image_tag=7.2.28-1.17.8-0ceedc1b
        - build_environment=dev
        - PHP_DATE_TIMEZONE=${PHP_DATE_TIMEZONE:-UTC}
        # XDEBUG confd build time args - you can set it to 0 turn it off.
        - PHP_XDEBUG=${PHP_XDEBUG:-1}
        - PHP_IDE_CONFIG="serverName=${PHP_IDE_CONFIG_SERVER_NAME:-drupal.localhost}"
        - PHP_XDEBUG_REMOTE_HOST=${PHP_XDEBUG_REMOTE_HOST:-host.docker.internal}
        - PHP_XDEBUG_DEFAULT_ENABLE=${PHP_XDEBUG_DEFAULT_ENABLE:-1}
        - PHP_XDEBUG_REMOTE_CONNECT_BACK=${PHP_XDEBUG_REMOTE_CONNECT_BACK:-0}
        # NGINX confd build time args
        - NGINX_SERVER_ROOT=${APP_DOCROOT:-/var/www/app/web}
        - NGINX_LISTEN_PORT=8080
    restart: unless-stopped
    depends_on:
      - solr
      - fcrepo
      - database
      - activemq
    networks:
      default:
        aliases:
          - drupal.localhost
    environment:
      APP_NAME: ${DRUPAL_SITE_NAME:-islandora}
      APP_ROOT: ${APP_ROOT:-/var/www/app}
      APP_ACCOUNT_NAME: ${DRUPAL_USER_NAME:-islandora}
      APP_ACCOUNT_MAIL: ${DRUPAL_USER_EMAIL:-islandora@example.com}
      DB_NAME: ${DB_NAME:-drupal_default}
      DB_USER: ${DB_USER:-drupal_default}
      DB_PASSWORD: ${DB_PASSWORD:-password}
      DB_HOST: "database"
      DB_PORT: "3306"
      DB_DRIVER: "mysql"
      DRUSH_OPTIONS_URI: "${PROJECT_BASE_URL:-drupal.localhost}:8000"
      DRUPAL_HASH_SALT: ${DRUPAL_HASH_SALT:-tfvQNpDFG2CjY9WHGNgFqC3eoMjyg5pZdGMQ74zjmnIoe0bi8F3hUvBWnGFIAM3nnj2iWA}
      NGINX_LISTEN_PORT: 8080
      AUTO_INSTALL: ${DRUPAL_AUTO_INSTALL:-true}
    volumes:
      # set delegated mode here on docker for mac for faster disk I/O
      - ./codebase:${APP_ROOT:-/var/www/app}:delegated
      - ./data/drupal/files:${FILES_DIR:-/mnt/files}
      # Anonymous volumes as a workaround to prevent empty or non existent host
      # folders from accidentally getting mounted in container and overwrite the
      # composer build stage files.
      - ${APP_ROOT:-/var/www/app}/vendor
      - ${APP_DOCROOT:-/var/www/app/web}/modules/contrib
      - ${APP_DOCROOT:-/var/www/app/web}/themes/contrib
      - ${APP_DOCROOT:-/var/www/app/web}/profiles/contrib
      - ${APP_DOCROOT:-/var/www/app/web}/libraries
    labels:
      #- "traefik.http.routers.${PROJECT_NAME:-islandora}.rule=Host(`${PROJECT_BASE_URL:-idcp.localhost}`)"
      #- "traefik.http.services.${PROJECT_NAME:-islandora}.loadbalancer.server.port=8080"
      - traefik.http.services.drupal.loadbalancer.server.port=80
      - traefik.http.routers.drupal_http.service=drupal
      - traefik.http.routers.drupal_http.entrypoints=http
      
  fcrepo:
    image:  ${REPOSITORY:-islandora}/fcrepo:latest
    volumes:
      - fcrepo-data:/data
      - jwt-data:/opt/keys/claw/
    depends_on: 
      - activemq
      - database
    networks:
      default:
        aliases:
          - fcrepo.localhost
    labels:
      # Do not expose in production.
      - traefik.http.services.fcrepo.loadbalancer.server.port=80
      - traefik.http.routers.fcrepo_http.service=fcrepo
      - traefik.http.routers.fcrepo_http.entrypoints=http
  fits:
    image:  ${REPOSITORY:-islandora}/fits
  gemini:
    image:  ${REPOSITORY:-islandora}/gemini:latest
    volumes:
      - jwt-data:/opt/keys/claw/
    depends_on: 
      - database
  homarus:
    image:  ${REPOSITORY:-islandora}/homarus:latest
    volumes:
      - jwt-data:/opt/keys/claw/
  houdini:
    image:  ${REPOSITORY:-islandora}/houdini:latest
    volumes:
      - jwt-data:/opt/keys/claw/
  hypercube:
    image:  ${REPOSITORY:-islandora}/hypercube:latest
    volumes:
      - jwt-data:/opt/keys/claw/
  matomo:
    image:  ${REPOSITORY:-islandora}/matomo
    volumes:
      - matomo-config-data:/opt/matomo/config
    depends_on: 
      - database
    networks:
      default:
      external: # Needs external access to request plugins, etc.
    labels:
      # Do not expose in production over http, setup https.
      - traefik.http.services.matomo.loadbalancer.server.port=80
      - traefik.http.routers.matomo_http.service=matomo
      - traefik.http.routers.matomo_http.entrypoints=http
  milliner:
    image:  ${REPOSITORY:-islandora}/milliner:latest
    volumes:
      - jwt-data:/opt/keys/claw/
  recast:
    image:  ${REPOSITORY:-islandora}/recast:latest
    volumes:
      - jwt-data:/opt/keys/claw/
  solr:
    image:  ${REPOSITORY:-islandora}/solr:latest
    volumes:
      - solr-data:/opt/solr/server/solr
    labels:
      # Do not expose in production.
      - traefik.http.services.solr.loadbalancer.server.port=8983
      - traefik.http.routers.solr_http.service=solr
      - traefik.http.routers.solr_http.entrypoints=http
  traefik:
    image: traefik:2.2.1
    command: >
      --api.insecure=true 
      --entryPoints.http.address=:80
      --entryPoints.https.address=:443
      --providers.docker 
      --providers.docker.network=external
      '--providers.docker.defaultRule=Host(`{{ index .Labels "com.docker.compose.service" }}.localhost`)'
    ports:
      - 80:80
      - 443:443
      - 8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - external
      - default
