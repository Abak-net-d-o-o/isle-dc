version: '3.7'

## ISLE 8 Draft Prototype
## Feb, 2020
## MVP 1 - Traefik, Solr, MySQL & Drupal

services:

  traefik:
    # review https://hub.docker.com/_/traefik
    image: traefik:2.1.3
    container_name: isle-dc-traefik-${CONTAINER_SHORT_ID}
    networks:
      isle-dc-internal:
      isle-dc-external:
    env_file:
      - .env
    ports:
      - "80:80"
      - "443:443"
      #- "8080:8080"
    volumes:
      # TO DO: local deployment placeholder
      - "./config/traefik/traefik.local.yml:/etc/traefik/traefik.yml"
      # TO DO: Update according to new Traefik 2.0 conventions (values below based on 1.7.9, are incomplete & wrong due to missing "routing" labels)
      - /var/run/docker.sock:/var/run/docker.sock
      # SSL Choice 1: To use Let's Encrypt for SSL- uncomment ONLY the line below and then create an empty config/traefik/acme.json file
      # - ./config/traefik/acme.json:/acme.json
      # SSL Choice 2: To use commercial SSLs - uncomment ONLY the line below. Add your SSL certs (.cert, .pem, .key) files to config/traefik/ssl-certs
      # - ./config/traefik/ssl-certs:/certs:ro
      # TO DO: Determine if toml files are still to be bound in Traefik 2.0
    # TO DO: Update according to new Traefik 2.0 conventions (values below based on 1.7.9, are incomplete & wrong due to missing "routing" labels)
#    labels:
#      - traefik.port=8080
      ## Enabling access to the Traefik interface is not safe in a production environment unless you have the ISLE system behind a firewall and only ports 80 and 443 exposed.
#      - traefik.enable=false
#      - traefik.frontend.rule=Host:admin.${BASE_DOMAIN};

    command:
      - "--configFile=/etc/traefik/traefik.yml"
 
  drupal:
    # review https://github.com/docker-library/docs/blob/master/drupal/content.md
    image: drupal:8.8.1-apache
    container_name: isle-dc-drupal-${CONTAINER_SHORT_ID}
    env_file:
      - .env
    networks:
      - isle-dc-internal
    depends_on:
      - mysql
      - traefik
    ports:
      - 8080:80
    volumes:
      # TO DO: Determine what is Drupal volume setup?
        # Disagreement re volumes in Drupal community https://github.com/docker-library/drupal/issues/3
        # Is it an idea to only mount sites data and rebuild image with Drupal code changes ?
        # Volumes setup should be reviewed https://hub.docker.com/_/drupal/
      # TO DO: Determine what should be in config/drupal? .keep file is in place for now to allow empty dir to appear.  
      - ./data/drupal/modules:/var/www/html/modules
      - ./data/drupal/profiles:/var/www/html/profiles
      - ./data/drupal/sites:/var/www/html/sites
      - ./data/drupal/themes:/var/www/html/themes
      # TO DO: Determine what type of container handling is needed
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.drupal.rule=Host(`${DOMAIN}`)"
      # TO DO: setup web-secure
      - "traefik.http.routers.drupal.entrypoints=web,web-secure"
 
## TO DO: Break this section out into another Docker-compose for extension https://docs.docker.com/compose/extends/ and as an conditional either mysql or postgres
  mysql:
    ## Using for protoype database
    image: mysql:5.7
    container_name: isle-dc-mysql-${CONTAINER_SHORT_ID}
    env_file:
      - .env
    networks:
      - isle-dc-internal
    depends_on:
      - traefik
    ports:
      - "3306:3306"
    volumes:
    ## TO DO: How to allow for slow query log setup?
    ## Customization: Allows for additional tuning of MySQL.
    ## From ISLE 7 work: keeping MySQL in a Docker volume avoids a slew of issues from bind-mounting
      - ./config/mysql/ISLE.cnf:/etc/mysql/mysql.conf.d/isle-mysql.cnf
      - isle-dc-mysql-data:/var/lib/mysql


  solr:
    image: solr:8.4.1
    container_name: isle-dc-solr-${CONTAINER_SHORT_ID}
    environment:
      - JAVA_MAX_MEM=2048M
      - JAVA_MIN_MEM=512M
    env_file:
      - .env
    networks:
      - isle-dc-internal
    depends_on:
      - traefik  
    ports:
      - "8082:8080"
    volumes:
      - isle-dc-solr-data:/usr/local/solr
    # TO DO: Determine what type of container handling is needed
    restart: always
 

networks:
  isle-dc-internal:
  isle-dc-external:


volumes:
  isle-dc-mysql-data:
  # isle-dc-postgres-data # Added to prototype but not currently used
  isle-dc-solr-data:
